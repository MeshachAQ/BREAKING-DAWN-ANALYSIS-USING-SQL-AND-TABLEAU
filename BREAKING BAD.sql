select * from ['Breaking Bad Dataset$']

-- Standardizing date
select [RELEASE DATE], CONVERT(DATE, [RELEASE DATE]) AS REL_DATE FROM ['Breaking Bad Dataset$']
ALTER TABLE ['Breaking Bad Dataset$']
ADD REL_DATE DATE

UPDATE ['Breaking Bad Dataset$']
SET REL_DATE =  CONVERT(DATE, [RELEASE DATE])

ALTER TABLE ['Breaking Bad Dataset$']
DROP COLUMN [RELEASE DATE]

--QUESTION:
--HOW MANY SEASONS IS BREAKING BAD?
--WHAT IS THE AVERAGE DURATION IN MINUTES?
--WHAT IS THE AVERAGE IMDB RATING?
--fIND THE TOTAL EPISODES PER SEASON.
--WHAT SEASON TITLE HAD THE HIGHEST RATING?
--CALCULATE THE TOTAL AND AVERAGE VIEWERS PER EPISODES AND ALSO THE TOTAL AND AVERAGE VIEWERS PER SEASON
--WHICH DIRECTOR PARTICIPATED THE MOST IN THE SERIES' ACHIEVEMNETS?

--FIRST I WILL LIKE TO CHECK FOR DUPLICATES BEFORE ENGAGING. SO YHH
WITH BREAKING AS (SELECT *, ROW_NUMBER() OVER(PARTITION BY TITLE, SEASON, EPISODE, DIRECTOR ORDER BY Title) AS ROW_NUM FROM ['Breaking Bad Dataset$'])
SELECT * FROM BREAKING WHERE ROW_NUM > 1

select * from ['Breaking Bad Dataset$']

--OKAY SO THERE ARE NO DUPLICATE VALUES, WE CAN NOW PROCEED WITH OUR ANALYSIS
--QUESTION 1:
SELECT COUNT(DISTINCT SEASON) AS SEASONS FROM ['Breaking Bad Dataset$']

--QUESTION 2:
SELECT AVG([DURATION IN MINUTES]) AS AVERAGE_TOTAL_DURATIONS FROM ['Breaking Bad Dataset$']

--QUESTION 3:
SELECT AVG([IMDB RATING]) AS AVERAGE_IMDB_RATING FROM ['Breaking Bad Dataset$']

--QUESTION 4
SELECT DISTINCT SEASON, COUNT(EPISODE) AS TOTAL_EPISODES FROM ['Breaking Bad Dataset$']
GROUP BY Season
ORDER BY TOTAL_EPISODES DESC

--QUESTION 5
SELECT TOP 1 TITLE, SUM([IMDB RATING]) AS RATINGS FROM ['Breaking Bad Dataset$']
GROUP BY TITLE
ORDER BY RATINGS DESC

--QUESTION 6A
SELECT DISTINCT EPISODE, SUM([U#S# VIEWERS IN MILLIONS]) AS TOTAL_VIEWERS_IN_MILLION FROM ['Breaking Bad Dataset$']
GROUP BY EPISODE
ORDER BY TOTAL_VIEWERS_IN_MILLION DESC

--QUESTION 6B
SELECT DISTINCT EPISODE, AVG([U#S# VIEWERS IN MILLIONS]) AS AVG_VIEWERS FROM ['Breaking Bad Dataset$']
GROUP BY EPISODE
ORDER BY AVG_VIEWERS DESC

--QUESTION 6C

SELECT DISTINCT Season, SUM([U#S# VIEWERS IN MILLIONS]) AS TOTAL_VIEWERS_IN_MILLION FROM ['Breaking Bad Dataset$']
GROUP BY Season
ORDER BY TOTAL_VIEWERS_IN_MILLION DESC

--QUESTION 6D
SELECT DISTINCT Season, AVG([U#S# VIEWERS IN MILLIONS]) AS AVG_VIEWERS FROM ['Breaking Bad Dataset$']
GROUP BY Season
ORDER BY AVG_VIEWERS DESC

--QUESTION 7
SELECT DISTINCT DIRECTOR, COUNT(TITLE) AS MOVIE_PARTICIPATION_COUNT FROM ['Breaking Bad Dataset$']
GROUP BY DIRECTOR
ORDER BY  MOVIE_PARTICIPATION_COUNT DESC

--WE NOW CREATE A VIEW
CREATE VIEW BREAKING_BAD AS (SELECT * FROM ['Breaking Bad Dataset$'])
SELECT * FROM BREAKING_BAD